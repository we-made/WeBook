# Generated by Django 3.1.1 on 2022-05-11 11:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('arrangement', '0001_initial'),
        ('screenshow', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='planmanifest',
            name='display_layouts',
            field=models.ManyToManyField(to='screenshow.DisplayLayout'),
        ),
        migrations.AddField(
            model_name='planmanifest',
            name='people',
            field=models.ManyToManyField(to='arrangement.Person'),
        ),
        migrations.AddField(
            model_name='planmanifest',
            name='rooms',
            field=models.ManyToManyField(to='arrangement.Room'),
        ),
        migrations.AddField(
            model_name='person',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='person_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='person',
            name='business_hours',
            field=models.ManyToManyField(to='arrangement.BusinessHour', verbose_name='Business Hours'),
        ),
        migrations.AddField(
            model_name='person',
            name='notes',
            field=models.ManyToManyField(to='arrangement.Note', verbose_name='Notes'),
        ),
        migrations.AddField(
            model_name='organizationtype',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='organizationtype_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='organization',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='organization_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='organization',
            name='business_hours',
            field=models.ManyToManyField(to='arrangement.BusinessHour', verbose_name='Business Hours'),
        ),
        migrations.AddField(
            model_name='organization',
            name='members',
            field=models.ManyToManyField(related_name='organizations', to='arrangement.Person', verbose_name='Members'),
        ),
        migrations.AddField(
            model_name='organization',
            name='notes',
            field=models.ManyToManyField(to='arrangement.Note', verbose_name='Notes'),
        ),
        migrations.AddField(
            model_name='organization',
            name='organization_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='organizations', to='arrangement.organizationtype', verbose_name='Organization Type'),
        ),
        migrations.AddField(
            model_name='note',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='note_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='note',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='arrangement.person'),
        ),
        migrations.AddField(
            model_name='looseservicerequisition',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='looseservicerequisition_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='looseservicerequisition',
            name='arrangement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='loose_service_requisitions', to='arrangement.arrangement'),
        ),
        migrations.AddField(
            model_name='looseservicerequisition',
            name='generated_requisition_record',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='arrangement.requisitionrecord'),
        ),
        migrations.AddField(
            model_name='looseservicerequisition',
            name='type_to_order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='arrangement.servicetype', verbose_name='Type to order'),
        ),
        migrations.AddField(
            model_name='location',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='location_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='eventservice',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='eventservice_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='eventservice',
            name='associated_people',
            field=models.ManyToManyField(to='arrangement.Person', verbose_name='Associated People'),
        ),
        migrations.AddField(
            model_name='eventservice',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='arrangement.event', verbose_name='Event'),
        ),
        migrations.AddField(
            model_name='eventservice',
            name='notes',
            field=models.ManyToManyField(to='arrangement.Note', verbose_name='Notes'),
        ),
        migrations.AddField(
            model_name='eventservice',
            name='receipt',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='arrangement.confirmationreceipt', verbose_name='Receipt'),
        ),
        migrations.AddField(
            model_name='eventservice',
            name='service_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='services_provided', to='arrangement.serviceprovidable', verbose_name='Service Provider'),
        ),
        migrations.AddField(
            model_name='eventseriefile',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='eventseriefile_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='eventseriefile',
            name='event_serie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='files', to='arrangement.eventserie'),
        ),
        migrations.AddField(
            model_name='eventseriefile',
            name='uploader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='files_uploaded_to_series', to='arrangement.person'),
        ),
        migrations.AddField(
            model_name='eventserie',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='eventserie_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='eventserie',
            name='arrangement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='series', to='arrangement.arrangement'),
        ),
        migrations.AddField(
            model_name='eventserie',
            name='serie_plan_manifest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='arrangement.planmanifest'),
        ),
        migrations.AddField(
            model_name='event',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='event_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='event',
            name='arrangement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='arrangement.arrangement', verbose_name='Arrangement'),
        ),
        migrations.AddField(
            model_name='event',
            name='articles',
            field=models.ManyToManyField(to='arrangement.Article', verbose_name='Articles'),
        ),
        migrations.AddField(
            model_name='event',
            name='display_layouts',
            field=models.ManyToManyField(blank=True, related_name='events', to='screenshow.DisplayLayout', verbose_name='Display Layouts'),
        ),
        migrations.AddField(
            model_name='event',
            name='loose_requisitions',
            field=models.ManyToManyField(related_name='events', to='arrangement.LooseServiceRequisition', verbose_name='Loose service requisitions'),
        ),
        migrations.AddField(
            model_name='event',
            name='notes',
            field=models.ManyToManyField(to='arrangement.Note', verbose_name='Notes'),
        ),
        migrations.AddField(
            model_name='event',
            name='people',
            field=models.ManyToManyField(to='arrangement.Person', verbose_name='People'),
        ),
        migrations.AddField(
            model_name='event',
            name='rooms',
            field=models.ManyToManyField(to='arrangement.Room', verbose_name='Rooms'),
        ),
        migrations.AddField(
            model_name='event',
            name='serie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='events', to='arrangement.eventserie'),
        ),
        migrations.AddField(
            model_name='confirmationreceipt',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='confirmationreceipt_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='confirmationreceipt',
            name='note',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='arrangement.note', verbose_name='Note'),
        ),
        migrations.AddField(
            model_name='confirmationreceipt',
            name='requested_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='arrangement.person', verbose_name='Requested By'),
        ),
        migrations.AddField(
            model_name='collisionanalysisreport',
            name='generated_for',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='arrangement.arrangement'),
        ),
        migrations.AddField(
            model_name='collisionanalysisrecord',
            name='collided_with_event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collision_records_bystanded', to='arrangement.event'),
        ),
        migrations.AddField(
            model_name='collisionanalysisrecord',
            name='conflicted_person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='arrangement.person'),
        ),
        migrations.AddField(
            model_name='collisionanalysisrecord',
            name='conflicted_room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='arrangement.room'),
        ),
        migrations.AddField(
            model_name='collisionanalysisrecord',
            name='originator_event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collision_records_focal', to='arrangement.event'),
        ),
        migrations.AddField(
            model_name='collisionanalysisrecord',
            name='report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='records', to='arrangement.collisionanalysisreport'),
        ),
        migrations.AddField(
            model_name='calendar',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='calendar_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='calendar',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='owners', to='arrangement.person', verbose_name='Owner'),
        ),
        migrations.AddField(
            model_name='calendar',
            name='people_resources',
            field=models.ManyToManyField(to='arrangement.Person', verbose_name='People Resources'),
        ),
        migrations.AddField(
            model_name='calendar',
            name='room_resources',
            field=models.ManyToManyField(to='arrangement.Room', verbose_name='Room Resources'),
        ),
        migrations.AddField(
            model_name='businesshour',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='businesshour_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='businesshour',
            name='note',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='arrangement.note', verbose_name='Note'),
        ),
        migrations.AddField(
            model_name='audience',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='audience_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='article',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='article_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='arrangementtype',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='arrangementtype_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='arrangementfile',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='arrangementfile_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='arrangementfile',
            name='arrangement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='files', to='arrangement.arrangement'),
        ),
        migrations.AddField(
            model_name='arrangementfile',
            name='uploader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='files_uploaded_to_arrangements', to='arrangement.person'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='archived_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='arrangement_archived_by', to='arrangement.person', verbose_name='Archived by'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='arrangement_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangements', to='arrangement.arrangementtype', verbose_name='Arrangement Type'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='audience',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrangements', to='arrangement.audience', verbose_name='Audience'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='display_layouts',
            field=models.ManyToManyField(blank=True, related_name='arrangements', to='screenshow.DisplayLayout', verbose_name='Display Layout'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrangements', to='arrangement.location', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='notes',
            field=models.ManyToManyField(related_name='arrangements', to='arrangement.Note', verbose_name='Notes'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='organization_participants',
            field=models.ManyToManyField(related_name='participating_in', to='arrangement.Organization', verbose_name='Organization Participants'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='people_participants',
            field=models.ManyToManyField(related_name='participating_in', to='arrangement.Person', verbose_name='People Participants'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='planners',
            field=models.ManyToManyField(to='arrangement.Person', verbose_name='Planners'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='responsible',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='arrangements_responsible_for', to='arrangement.person', verbose_name='Responsible'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='timeline_events',
            field=models.ManyToManyField(to='arrangement.TimelineEvent', verbose_name='Timeline Events'),
        ),
    ]
