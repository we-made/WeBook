# Generated by Django 3.1.1 on 2021-10-12 10:18

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Arrangement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('starts', models.DateField(verbose_name='starts')),
                ('ends', models.DateField(verbose_name='ends')),
            ],
            options={
                'db_table': 'arrangements',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'db_table': 'articles',
            },
        ),
        migrations.CreateModel(
            name='Audience',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'db_table': 'audiences',
            },
        ),
        migrations.CreateModel(
            name='BusinessHour',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('start_of_business_hours', models.TimeField(verbose_name='StartOfBusinessHours')),
                ('end_of_business_hours', models.TimeField(verbose_name='EndOfBusinessHours')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConfirmationReceipt',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('guid', models.CharField(max_length=68, verbose_name='Guid')),
                ('sent_to', models.CharField(max_length=255, verbose_name='SentTo')),
                ('confirmed', models.BooleanField(default=False, verbose_name='Confirmed')),
                ('sent_when', models.DateTimeField(verbose_name='SentWhen')),
                ('confirmed_when', models.DateTimeField(verbose_name='ConfirmedWhen')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('start', models.DateTimeField(verbose_name='start')),
                ('end', models.DateTimeField(verbose_name='end')),
                ('sequence_guid', models.CharField(blank=True, max_length=40, null=True, verbose_name='sequence_guid')),
                ('arrangement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='arrangement.arrangement')),
                ('articles', models.ManyToManyField(to='arrangement.Article')),
            ],
            options={
                'db_table': 'events',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'db_table': 'locations',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('content', models.TextField(max_length=1024, verbose_name='content')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('organization_number', models.IntegerField(blank=True, null=True, verbose_name='Organization Number')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizationType',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'db_table': 'organizationtypes',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimelineEvent',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('content', models.CharField(max_length=1024, verbose_name='content')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('service_name', models.CharField(max_length=255, verbose_name='ServiceName')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='arrangement.organization')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='arrangement.servicetype')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='arrangement.location')),
            ],
            options={
                'db_table': 'rooms',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('personal_email', models.CharField(max_length=255, verbose_name='PersonalEmail')),
                ('first_name', models.CharField(max_length=255, verbose_name='FirstName')),
                ('middle_name', models.CharField(blank=True, max_length=255, verbose_name='MiddleName')),
                ('last_name', models.CharField(max_length=255, verbose_name='LastName')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='BirthDate')),
                ('business_hours', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='arrangement.businesshour')),
                ('notes', models.ManyToManyField(to='arrangement.Note')),
            ],
            options={
                'db_table': 'people',
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='members',
            field=models.ManyToManyField(to='arrangement.Person'),
        ),
        migrations.AddField(
            model_name='organization',
            name='notes',
            field=models.ManyToManyField(to='arrangement.Note'),
        ),
        migrations.AddField(
            model_name='organization',
            name='organization_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='arrangement.organizationtype'),
        ),
        migrations.AddField(
            model_name='note',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='arrangement.person'),
        ),
        migrations.AddField(
            model_name='note',
            name='confirmation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='arrangement.confirmationreceipt'),
        ),
        migrations.CreateModel(
            name='EventService',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('associated_people', models.ManyToManyField(to='arrangement.Person')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='arrangement.event')),
                ('notes', models.ManyToManyField(to='arrangement.Note')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='arrangement.serviceprovider')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='event',
            name='notes',
            field=models.ManyToManyField(to='arrangement.Note'),
        ),
        migrations.AddField(
            model_name='event',
            name='people',
            field=models.ManyToManyField(to='arrangement.Person'),
        ),
        migrations.AddField(
            model_name='event',
            name='rooms',
            field=models.ManyToManyField(to='arrangement.Room'),
        ),
        migrations.AddField(
            model_name='confirmationreceipt',
            name='requested_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='arrangement.person'),
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('is_personal', models.BooleanField(default=True, verbose_name='ispersonal')),
                ('people_resources', models.ManyToManyField(to='arrangement.Person')),
                ('room_resources', models.ManyToManyField(to='arrangement.Room')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='arrangement',
            name='audience',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='arrangement.audience'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='owners',
            field=models.ManyToManyField(to='arrangement.Person'),
        ),
        migrations.AddField(
            model_name='arrangement',
            name='timeline_events',
            field=models.ManyToManyField(to='arrangement.TimelineEvent'),
        ),
    ]
