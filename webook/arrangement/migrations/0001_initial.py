# Generated by Django 3.1.1 on 2022-05-11 11:42

import autoslug.fields
import datetime
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import webook.arrangement.models
import webook.utils.crudl_utils.model_mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Arrangement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('ticket_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ticket Code')),
                ('expected_visitors', models.IntegerField(default=0, verbose_name='Expected visitors')),
                ('actual_visitors', models.IntegerField(default=0, verbose_name='Actual visitors')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='Name English')),
                ('stages', models.CharField(choices=[('planning', 'planning'), ('requisitioning', 'requisitioning'), ('ready_to_launch', 'ready_to_launch'), ('in_production', 'in_production')], default='planning', max_length=255)),
                ('meeting_place', models.CharField(blank=True, max_length=255, null=True, verbose_name='Meeting Place')),
                ('starts', models.DateField(null=True, verbose_name='Starts')),
                ('ends', models.DateField(null=True, verbose_name='Ends')),
                ('show_on_multimedia_screen', models.BooleanField(default=False, verbose_name='Show on multimedia screen')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
            ],
            options={
                'verbose_name': 'Arrangement',
                'verbose_name_plural': 'Arrangements',
            },
            bases=(webook.utils.crudl_utils.model_mixins.ModelNamingMetaMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArrangementFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('file', models.FileField(upload_to='arrangementFiles/')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArrangementType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='Screen Name English')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
            ],
            options={
                'verbose_name': 'Arrangement',
                'verbose_name_plural': 'Arrangements',
            },
            bases=(webook.utils.crudl_utils.model_mixins.ModelNamingMetaMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
            },
        ),
        migrations.CreateModel(
            name='Audience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='Name English')),
                ('icon_class', models.CharField(blank=True, max_length=255, verbose_name='Icon Class')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
            ],
            options={
                'verbose_name': 'Audience',
                'verbose_name_plural': 'Audiences',
            },
            bases=(webook.utils.crudl_utils.model_mixins.ModelNamingMetaMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BusinessHour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday'), (7, 'Holiday')], default=0, verbose_name='Day Of Week')),
                ('start_of_business_hours', models.TimeField(verbose_name='Start Of Business Hours')),
                ('end_of_business_hours', models.TimeField(verbose_name='End Of Business Hours')),
                ('valid_from', models.DateTimeField(default=datetime.datetime(1, 1, 1, 0, 0), verbose_name='Valid From')),
                ('valid_through', models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999), verbose_name='Valid Through')),
            ],
            options={
                'verbose_name': 'Business Hour',
                'verbose_name_plural': 'Business Hours',
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('is_personal', models.BooleanField(default=True, verbose_name='Is Personal')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
            ],
            options={
                'verbose_name': 'Calendar',
                'verbose_name_plural': 'Calendars',
            },
        ),
        migrations.CreateModel(
            name='CollisionAnalysisRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('dimension', models.CharField(choices=[('dimension_person', 'dimension_person'), ('dimension_room', 'dimension_room')], default='dimension_undefined', max_length=255)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CollisionAnalysisReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConfirmationReceipt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('type', models.CharField(choices=[('requisition_default', 'requisition_default'), ('requisition_person', 'requisition_person'), ('requisition_service', 'requisition_service')], default='requisition_default', max_length=255)),
                ('state', models.CharField(choices=[('confirmed', 'confirmed'), ('denied', 'denied'), ('pending', 'pending'), ('cancelled', 'cancelled')], default='pending', max_length=255)),
                ('code', models.CharField(db_index=True, max_length=200, unique=True, verbose_name='Code')),
                ('sent_to', models.EmailField(max_length=255, verbose_name='SentTo')),
                ('sent_when', models.DateTimeField(auto_now_add=True, null=True, verbose_name='SentWhen')),
                ('denial_reasoning', models.TextField(blank=True, verbose_name='Reason of denial')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('ticket_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ticket Code')),
                ('expected_visitors', models.IntegerField(default=0, verbose_name='Expected visitors')),
                ('actual_visitors', models.IntegerField(default=0, verbose_name='Actual visitors')),
                ('silo', models.CharField(choices=[('planning_silo', 'planning_silo'), ('requisitioning_silo', 'requisitioning_silo'), ('analysis_silo', 'analysis_silo'), ('production_silo', 'production_silo'), ('archive_silo', 'archive_silo')], default='planning_silo', max_length=255)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('title_en', models.CharField(blank=True, max_length=255, verbose_name='Title (English)')),
                ('start', models.DateTimeField(verbose_name='Start')),
                ('end', models.DateTimeField(verbose_name='End')),
                ('all_day', models.BooleanField(default=False, verbose_name='AllDay')),
                ('sequence_guid', models.CharField(blank=True, max_length=40, null=True, verbose_name='SequenceGuid')),
                ('color', models.CharField(blank=True, max_length=40, null=True, verbose_name='Primary Color')),
                ('is_locked', models.BooleanField(default=False, verbose_name='Is Locked')),
                ('is_requisitionally_complete', models.BooleanField(default=False, verbose_name='Requisitions Finished')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='EventSerie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventSerieFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('file', models.FileField(upload_to='serieFiles/')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
            bases=(webook.utils.crudl_utils.model_mixins.ModelNamingMetaMixin, models.Model),
        ),
        migrations.CreateModel(
            name='LooseServiceRequisition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('comment', models.TextField(default='', verbose_name='Comment')),
                ('is_open_for_ordering', models.BooleanField(default=False, verbose_name='Is Open for Ordering')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('content', models.TextField(max_length=1024, verbose_name='Content')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('organization_number', models.IntegerField(blank=True, null=True, verbose_name='Organization Number')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
            },
            bases=(webook.utils.crudl_utils.model_mixins.ModelNamingMetaMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OrganizationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
            ],
            options={
                'verbose_name': 'Organization Type',
                'verbose_name_plural': 'Organization Types',
            },
            bases=(webook.utils.crudl_utils.model_mixins.ModelNamingMetaMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('personal_email', models.CharField(max_length=255, verbose_name='Personal Email')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=255, verbose_name='Middle Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='full_name', unique=True)),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'People',
            },
            bases=(webook.utils.crudl_utils.model_mixins.ModelNamingMetaMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PersonRequisition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=(models.Model, webook.arrangement.models.ModelHistoricallyConfirmableMixin),
        ),
        migrations.CreateModel(
            name='PlanManifest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('expected_visitors', models.IntegerField(default=0)),
                ('ticket_code', models.CharField(blank=True, max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255)),
                ('pattern', models.CharField(max_length=255)),
                ('pattern_strategy', models.CharField(max_length=255)),
                ('recurrence_strategy', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('stop_within', models.DateField(blank=True, null=True)),
                ('stop_after_x_occurences', models.IntegerField(blank=True, null=True)),
                ('project_x_months_into_future', models.IntegerField(blank=True, null=True)),
                ('monday', models.BooleanField(default=False, null=True)),
                ('tuesday', models.BooleanField(default=False, null=True)),
                ('wednesday', models.BooleanField(default=False, null=True)),
                ('thursday', models.BooleanField(default=False, null=True)),
                ('friday', models.BooleanField(default=False, null=True)),
                ('saturday', models.BooleanField(default=False, null=True)),
                ('sunday', models.BooleanField(default=False, null=True)),
                ('arbitrator', models.CharField(blank=True, max_length=255, null=True)),
                ('day_of_week', models.IntegerField(default=0, null=True)),
                ('day_of_month', models.IntegerField(default=0, null=True)),
                ('month', models.IntegerField(default=0, null=True)),
                ('interval', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='Name English')),
                ('max_capacity', models.IntegerField(verbose_name='Maximum Occupants')),
                ('is_exclusive', models.BooleanField(default=False, verbose_name='Is Exclusive')),
                ('has_screen', models.BooleanField(default=True, verbose_name='Has Screen')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('archived_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='room_archived_by', to='arrangement.person', verbose_name='Archived by')),
                ('business_hours', models.ManyToManyField(to='arrangement.BusinessHour', verbose_name='Business Hours')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='arrangement.location', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
            },
            bases=(webook.utils.crudl_utils.model_mixins.ModelNamingMetaMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ServiceProvidable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('service_contact', models.EmailField(max_length=254, verbose_name='Service contact')),
                ('archived_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='serviceprovidable_archived_by', to='arrangement.person', verbose_name='Archived by')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='services_providable', to='arrangement.organization', verbose_name='Organization')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimelineEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('content', models.CharField(max_length=1024, verbose_name='Content')),
                ('stamp', models.DateTimeField(verbose_name='Stamp')),
                ('archived_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='timelineevent_archived_by', to='arrangement.person', verbose_name='Archived by')),
            ],
            options={
                'verbose_name': 'Timeline Event',
                'verbose_name_plural': 'Timeline Events',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('archived_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='servicetype_archived_by', to='arrangement.person', verbose_name='Archived by')),
            ],
            options={
                'verbose_name': 'Service Type',
                'verbose_name_plural': 'Service Types',
            },
            bases=(webook.utils.crudl_utils.model_mixins.ModelNamingMetaMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ServiceRequisition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('order_information', models.TextField(blank=True)),
                ('originating_loose_requisition', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='actual_requisition', to='arrangement.looseservicerequisition')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='ordered_services', to='arrangement.serviceprovidable')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=(models.Model, webook.arrangement.models.ModelHistoricallyConfirmableMixin),
        ),
        migrations.AddField(
            model_name='serviceprovidable',
            name='service_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='providers', to='arrangement.servicetype', verbose_name='Service Type'),
        ),
        migrations.CreateModel(
            name='RoomPreset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('archived_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='roompreset_archived_by', to='arrangement.person', verbose_name='Archived by')),
                ('rooms', models.ManyToManyField(to='arrangement.Room')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=(webook.utils.crudl_utils.model_mixins.ModelNamingMetaMixin, models.Model),
        ),
        migrations.CreateModel(
            name='RequisitionRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Is archived')),
                ('archived_when', models.DateTimeField(null=True, verbose_name='Archived when')),
                ('has_been_locked', models.BooleanField(default=False, verbose_name='Has been locked')),
                ('type_of_requisition', models.CharField(choices=[('undefined', 'undefined'), ('people', 'people'), ('services', 'services')], default='undefined', max_length=255)),
                ('is_fulfilled', models.BooleanField(default=False, verbose_name='Is Fulfilled')),
                ('affected_events', models.ManyToManyField(to='arrangement.Event', verbose_name='Affected Events')),
                ('archived_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='requisitionrecord_archived_by', to='arrangement.person', verbose_name='Archived by')),
                ('arrangement', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='requisitions', to='arrangement.arrangement')),
                ('confirmation_receipt', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='requisition_record', to='arrangement.confirmationreceipt')),
                ('historic_confirmation_receipts', models.ManyToManyField(to='arrangement.ConfirmationReceipt')),
                ('person_requisition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='parent_record', to='arrangement.personrequisition')),
                ('service_requisition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='parent_record', to='arrangement.servicerequisition')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
    ]
